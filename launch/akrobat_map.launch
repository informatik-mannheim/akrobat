<!-- -*- mode: XML -*- -->

<launch>

<arg name="database_path"     default="rtabmap.db"/>
<arg name="rgbd_odometry"     default="false"/>
<arg name="rtabmapviz"        default="false"/>
<arg name="localization"      default="false"/>
<arg name="simulation"        default="false"/>
<arg name="sw_registered"     default="false"/>
<arg     if="$(arg localization)" name="localiz"  default="--delete_db_on_start"/>
<arg unless="$(arg localization)" name="localiz"  default=""/>

<arg     if="$(arg simulation)" name="rgb_topic"   default="/pico_flexx/image_mono8"/>
<arg unless="$(arg simulation)" name="rgb_topic"   default="/pico_flexx/image_mono8"/>
<arg     if="$(arg simulation)" name="depth_topic" default="/pico_flexx/image_depth"/>
<arg unless="$(arg simulation)" name="depth_topic" default="/pico_flexx/image_depth"/>
<arg name="camera_info_topic" default="/pico_flexx/camera_info"/>
  
<arg name="wait_for_transform"  default="0.3"/> 

<!-- <node pkg="tf" type="static_transform_publisher" name="odom_base_link"
     args="0 0 0 0 0 0  odom base_link 100" />    -->

<!-- Run the ROS package stereo_image_proc -->


<group ns="rtabmap">   
  <node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" output="screen" args="$(arg localiz)">
    <param name="database_path"       type="string" value="$(arg database_path)"/>
    <param name="frame_id" type="string" value="base_link"/>
    <param name="wait_for_transform_duration"  type="double"   value="$(arg wait_for_transform)"/>
    <param name="subscribe_depth"     type="bool"   value="true"/>
	  <param name="subscribe_scan"      type="bool"   value="true"/>
    <param name="map_negative_poses_ignored" type="bool" value="true"/>

    <!-- When sending goals on /rtabmap/goal topic, use actionlib to communicate with move_base --> 
	  <param name="use_action_for_goal" type="bool" value="true"/>
    <remap from="move_base"            to="/move_base"/>

    <!-- RTAB-Map's parameters -->
    
    
    <!-- inputs -->
	  <remap from="scan"            to="/scan"/>
	  <remap from="rgb/image"       to="$(arg rgb_topic)"/>
  	<remap from="depth/image"     to="$(arg depth_topic)"/>
  	<remap from="rgb/camera_info" to="$(arg camera_info_topic)"/>
    <remap from="/rtabmap/odom" to="/odom"/>
    
  	  
  	<!-- output -->
  	<remap from="grid_map" to="/map"/>
	
	  <!-- RTAB-Map's parameters: do "rosrun rtabmap rtabmap (double-dash)params" to see the list of available parameters. -->
	  <param name="RGBD/ProximityBySpace"        type="string" value="true"/>   <!-- Local loop closure detection (using estimated position) with locations in WM -->
	  <param name="RGBD/OptimizeFromGraphEnd"    type="string" value="false"/>  <!-- Set to false to generate map correction between /map and /odom -->
	  <param name="Kp/MaxDepth"                  type="string" value="4.0"/>
	  <param name="Reg/Strategy"                 type="string" value="0"/>      <!-- Loop closure transformation: 0=Visual, 1=ICP, 2=Visual+ICP -->
	  <param name="Icp/CorrespondenceRatio"      type="string" value="0.3"/>
	  <param name="Vis/MinInliers"               type="string" value="15"/>      <!-- 3D visual words minimum inliers to accept loop closure -->
	  <param name="Vis/InlierDistance"           type="string" value="0.1"/>    <!-- 3D visual words correspondence distance -->
	  <param name="RGBD/AngularUpdate"           type="string" value="0.1"/>    <!-- Update map only if the robot is moving -->
	  <param name="RGBD/LinearUpdate"            type="string" value="0.1"/>    <!-- Update map only if the robot is moving -->
	  <param name="RGBD/ProximityPathMaxNeighbors" type="string" value="0"/> 
	  <param name="Rtabmap/TimeThr"              type="string" value="0"/>
	  <param name="Mem/RehearsalSimilarity"      type="string" value="0.30"/>
	  <param name="Reg/Force3DoF"                type="string" value="true"/>
	  <param name="GridGlobal/MinSize"           type="string" value="20"/>

	  
	  <!-- localization mode -->
	  <param     if="$(arg localization)" name="Mem/IncrementalMemory" type="string" value="false"/>
	  <param unless="$(arg localization)" name="Mem/IncrementalMemory" type="string" value="true"/>
	  <param name="Mem/InitWMWithAllNodes" type="string" value="$(arg localization)"/> 

  </node>
 </group>
</launch>
