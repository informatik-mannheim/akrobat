<!-- -*- mode: XML -*- -->
<launch>
  <!-- configuration -->
  <arg name="gui" default="false" />
  <arg name="sim" default="false" />
  <arg name="loc" default="false" />
  <arg name="model" default="$(find akrobat)/urdf/hexapod.urdf" />

  <!-- configuration end -->

<!-- Batterie Ãœberwachung starten-->
  
  <node name="batterie_controll" pkg="power_ina219" type="ina219_node">
  <param name="rshunt" value="0.0033"/>
  </node>

  <param name="robot_description" textfile="$(arg model)" />
  <param name="use_gui" value="$(arg gui)" />

  <!-- start joystick -->
  <node respawn="true" pkg="joy" type="joy_node" name="Joystick_Controller">
    <param name="dev" type="string" value="/dev/input/js0" />
  </node>
  

  <!-- start robot state publisher -->
  <!-- <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
    <param name="publish_frequency" value="20.0" />
  </node> -->

  <!-- include dynamixel unless we are just simulating -->
  <include file="$(find akrobat)/launch/dynamixel.launch" unless="$(arg sim)" />

  <!-- start akrobat walking algorithms -->
  <node name="akrobat" pkg="akrobat" type="akrobat" output="screen" required="true">
    <remap from="/goal_joint_states" to="/joint_states" if="$(arg sim)"/>
  </node>

  <!-- start translationNode -->
  <node name="Joystick_Transllation" pkg="akrobat" type="translateJoypad"></node>
  <node name="Navigation_Transllation" pkg="akrobat" type="translateNavigation"></node>


  <!-- start rviz-->
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find akrobat)/rviz/akrobat.rviz" if="$(arg gui)" />

  <!-- include robot_localization -->
  <!-- <include file="$(find akrobat)/launch/robot_localization.launch" /> -->
  <!-- include rtabmap stack-->
  <include file="$(find akrobat)/launch/akrobat_map.launch" >
  <arg name="database_path"     default="rtabmap.db"/>
  <arg if="$(arg loc)" name="localization"      default="true"/>
  <arg unless="$(arg loc)" name="localization"      default="false"/>
  <arg if="$(arg sim)" name="simulation"        default="true"/>
  <arg unless="$(arg sim)" name="simulation"        default="false"/>
  <arg name="sw_registered"     default="false"/>
  <arg     if="$(arg loc)" name="localiz"  default=""/>
  <arg unless="$(arg loc)" name="localiz"  default="--delete_db_on_start"/>

  <arg     if="$(arg sim)" name="rgb_topic"   default="/pico_flexx/image_mono8"/>
  <arg unless="$(arg sim)" name="rgb_topic"   default="/pico_flexx/image_mono8"/>
  <arg     if="$(arg sim)" name="depth_topic" default="/pico_flexx/image_depth"/>
  <arg unless="$(arg sim)" name="depth_topic" default="/pico_flexx/image_depth"/>
  <arg name="camera_info_topic" default="/pico_flexx/camera_info"/>
    
  <arg name="wait_for_transform"  default="0.3"/> 
  </include>

  <!-- include navigation stack-->
  <include file="$(find akrobat)/launch/akrobat_navigation.launch" />
 
<!-- start state machine 
  <node name="state_machine" pkg="akrobat" type="smach_example_state_machine.py" output="screen" respawn="true"></node> -->
</launch>
